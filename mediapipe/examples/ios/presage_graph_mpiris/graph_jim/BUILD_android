# Copyright 2019 The MediaPipe Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load(
    "//mediapipe/framework/tool:mediapipe_graph.bzl",
    "mediapipe_binary_graph",
)

licenses(["notice"])

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "desktop_calculators",
    deps = [
        "//mediapipe/calculators/core:constant_side_packet_calculator",
        "//mediapipe/calculators/video:opencv_video_decoder_calculator",
        "//mediapipe/calculators/video:opencv_video_encoder_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_cpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_cpu",
    ],
)

cc_library(
    name = "desktop_live_calculators",
    deps = [
        "//mediapipe/calculators/core:constant_side_packet_calculator",
        "//mediapipe/calculators/core:flow_limiter_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_cpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_cpu",
    ],
)

cc_library(
    name = "desktop_live_gpu_calculators",
    deps = [
        "//mediapipe/calculators/core:constant_side_packet_calculator",
        "//mediapipe/calculators/core:flow_limiter_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_gpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_gpu",
    ],
)

cc_library(
    name = "mobile_calculators",
    deps = [
        "//mediapipe/calculators/core:flow_limiter_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_gpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_gpu",
 	"//mediapipe/gpu:gpu_buffer_to_image_frame_calculator",
	"//mediapipe/modules/pose_landmark:pose_landmark_gpu",
    ],
)

cc_library(
    name = "mobile_calculators2",
    deps = [
        "//mediapipe/calculators/core:flow_limiter_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_gpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_gpu",
 	"//mediapipe/gpu:gpu_buffer_to_image_frame_calculator",
	"//mediapipe/modules/pose_landmark:pose_landmark_gpu",
	"//mediapipe/calculators/util:landmarks_smoothing_calculator",
	"//mediapipe/calculators/core:concatenate_proto_list_calculator",
	"//mediapipe/calculators/core:constant_side_packet_calculator",
        "//mediapipe/calculators/core:split_vector_calculator",
	"//mediapipe/graphs/pose_tracking/subgraphs:pose_renderer_gpu",
        "//mediapipe/calculators/image:image_transformation_calculator",
	"//mediapipe/calculators/video:flow_packager_calculator",
        "//mediapipe/calculators/video:motion_analysis_calculator",
        "//mediapipe/calculators/core:packet_resampler_calculator",
        "//mediapipe/calculators/video:flow_to_image_calculator",
    ],
)


cc_library(
    name = "mobile_calculators3",
    deps = [
        "//mediapipe/calculators/core:flow_limiter_calculator",
        "//mediapipe/graphs/face_mesh/subgraphs:face_renderer_gpu",
        "//mediapipe/modules/face_landmark:face_landmark_front_gpu",
       	"//mediapipe/gpu:gpu_buffer_to_image_frame_calculator",
      	"//mediapipe/modules/pose_landmark:pose_landmark_gpu",
      	"//mediapipe/calculators/util:landmarks_smoothing_calculator",
        "//mediapipe/calculators/core:split_vector_calculator",
        "//mediapipe/calculators/core:packet_resampler_calculator",
    ],
)


#//mediapipe/calculators/image:image_transformation_calculator"

mediapipe_binary_graph(
    name = "pose_facemesh_binary_graph",
    graph = "pose_facemesh.pbtxt",
    output_name = "pose_facemesh_hol.binarypb",
    deps = [":mobile_calculators"],
)

mediapipe_binary_graph(
    name = "pose_facemesh_moredisplays_binary_graph",
    graph = "pose_facemesh_moredisplays.pbtxt",
    output_name = "pose_facemesh_moredisplays.binarypb",
    deps = [":mobile_calculators"],
)

mediapipe_binary_graph(
    name = "pose_facemesh_binary_graph_throt",
    graph = "pose_facemesh_throt.pbtxt",
    output_name = "pose_facemesh_throt.binarypb",
    deps = [":mobile_calculators2"],
)

mediapipe_binary_graph(
    name = "HRRR",
    graph = "graph_HRRR_04_17_23.pbtxt",
    output_name = "graph_HRRR_04_17_23.binarypb",
    deps = [":mobile_calculators3"],
)
